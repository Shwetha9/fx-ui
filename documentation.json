{
    "pipes": [],
    "interfaces": [
        {
            "name": "CardFooter",
            "id": "interface-CardFooter-0bdb78968be37fd29a6b720770e3395872cd25b0133c997394a72186cb2da1871262d726f5255e0bda71cb6dd78fd07f313dfae7baba56c1baf70c48a6bea295",
            "file": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, InputSignal, input, type OnInit } from '@angular/core';\nimport { FxUiButtonComponent } from '../../atoms/fx-ui-button/fx-ui-button.component';\ninterface CardFooter {\n  footerRichText?: string;\n  footerButton?: string;\n}\n@Component({\n  selector: 'app-fx-ui-card',\n  standalone: true,\n  imports: [CommonModule, FxUiButtonComponent],\n  templateUrl: './fx-ui-card.component.html',\n  styleUrl: './fx-ui-card.component.scss',\n})\nexport class FxUiCardComponent implements OnInit {\n  cardTitle = input.required<string>();\n  cardDescription = input.required<string>();\n  cardImage = input<string>();\n  cardImgAltText = input<string>();\n  cardFooter = input<CardFooter>();\n\n  ngOnInit(): void {\n    return;\n  }\n}\n",
            "properties": [
                {
                    "name": "footerButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "footerRichText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1495b398c1f5408dd3c0641038bdbd31d7e2cc68f9c12b502e9756b6beb5762340983817c51d1fcfba79b69261074708e311e17b08d6c8539c2000ed927db0fc",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ng-experiments'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'ng-experiments';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"ng-experiments\"></main>\n\n<router-outlet />\n"
        },
        {
            "name": "FxUiButtonComponent",
            "id": "component-FxUiButtonComponent-ebcbd3c6ef5b57e208ba07fad24e1308ff4e138560cf203508e190115933e7d363f8888185da367728ba81ea8b736d61012f7e24c9686346832780cb8b8e0d22",
            "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-button",
            "styleUrls": [
                "./fx-ui-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fx-ui-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "iconPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": true
                },
                {
                    "name": "shape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClickEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonClickEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                },
                {
                    "name": "classModifiers",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "color",
                    "defaultValue": "input<FxUiButtonColor>('secondary')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "iconPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "required": false
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "computed(\n    () => this.state() === 'disabled' || this.state() === 'loading',\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": true
                },
                {
                    "name": "shape",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "input<FxUiButtonSize>('medium')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "type",
                    "defaultValue": "input<FxUiButtonType>('fill')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "generateButtonClass",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, OnInit, input, computed, output } from '@angular/core';\nimport {\n  FxUiButtonType,\n  FxUiButtonSize,\n  FxUiButtonColor,\n  FxUiButtonShape,\n  FxUiButtonIconPosition,\n  FxUiButtonState,\n} from './fx-ui-button.component.type';\n\n@Component({\n  selector: 'app-fx-ui-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-button.component.html',\n  styleUrls: ['./fx-ui-button.component.scss'],\n})\nexport class FxUiButtonComponent implements OnInit {\n  type = input<FxUiButtonType>('fill');\n  size = input<FxUiButtonSize>('medium');\n  color = input<FxUiButtonColor>('secondary');\n  shape = input<FxUiButtonShape>();\n  iconPosition = input<FxUiButtonIconPosition>();\n  state = input<FxUiButtonState>();\n  label = input.required<string>();\n  buttonClickEvent = output<void>();\n  classModifiers: { [key: string]: boolean } = {};\n  icon = input<string>();\n\n  ngOnInit(): void {\n    this.classModifiers = this.generateButtonClass();\n  }\n\n  ngOnChanges(): void {\n    this.classModifiers = this.generateButtonClass();\n  }\n\n  generateButtonClass(): { [key: string]: boolean } {\n    return {\n      [`fx-button--${this.size()}`]: !!this.size(),\n      [`fx-button--${this.color()}`]: !!this.color(),\n      [`fx-button--${this.shape()}`]: !!this.shape(),\n      [`fx-button--${this.iconPosition()}`]: !!this.iconPosition(),\n      [`fx-button--${this.state()}`]: !!this.state(),\n      [`fx-button--${this.type()}`]: !!this.type(),\n    };\n  }\n\n  handleButtonClick(): void {\n    this.buttonClickEvent.emit();\n  }\n\n  // Computed properties\n  readonly isDisabled = computed(\n    () => this.state() === 'disabled' || this.state() === 'loading',\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Basic button styles */\n\n@use \"../../../../assets/scss/variables\" as *;\n\n$selector: \"fx-button\";\n\n.fx-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 4px;\n\n  &--fill {\n    color: $grey-100;\n    &.#{$selector}--primary {\n      background-color: $primary;\n      &:hover {\n        background-color: light($primary, 10%);\n      }\n    }\n    &.#{$selector}--secondary {\n      background-color: $secondary;\n\n      &:hover {\n        background-color: light($secondary, 10%);\n      }\n    }\n    &.#{$selector}--tertiary {\n      background-color: $tertiary;\n      color: $grey-900;\n      &:hover {\n        background-color: light($tertiary, 10%);\n      }\n    }\n\n    &.#{$selector}--success {\n      background-color: $success;\n      &:hover {\n        background-color: light($success, 10%);\n      }\n    }\n\n    &.#{$selector}--warning {\n      background-color: $warning;\n      color: $grey-800;\n      &:hover {\n        background-color: light($warning, 10%);\n      }\n    }\n\n    &.#{$selector}--danger {\n      background-color: $error;\n      color: $grey-100;\n      &:hover {\n        background-color: light($error, 10%);\n      }\n    }\n  }\n\n  &--outline {\n    background-color: transparent;\n\n    &.#{$selector}--primary {\n      color: $primary;\n      border: 1px solid $primary;\n      &:hover {\n        background-color: $primary;\n      }\n    }\n    &.#{$selector}--secondary {\n      color: $secondary;\n      border: 1px solid $secondary;\n      &:hover {\n        background-color: $secondary;\n      }\n    }\n    &.#{$selector}--tertiary {\n      color: $tertiary;\n      border: 1px solid $tertiary;\n      &:hover {\n        background-color: $tertiary;\n      }\n    }\n\n    &.#{$selector}--success {\n      color: $success;\n      border: 1px solid $success;\n      &:hover {\n        background-color: $success;\n      }\n    }\n\n    &.#{$selector}--warning {\n      color: $warning;\n      border: 1px solid $warning;\n      &:hover {\n        background-color: $warning;\n      }\n    }\n\n    &.#{$selector}--danger {\n      color: $error;\n      border: 1px solid $error;\n      &:hover {\n        background-color: $error;\n      }\n    }\n    &:hover {\n      color: $grey-100 !important;\n    }\n  }\n  &--small {\n    padding: 1rem 1.25rem;\n    font-size: 1rem;\n  }\n  &--medium {\n    padding: 1.25rem 2.5rem;\n    font-size: 1.5rem;\n  }\n  &--large {\n    padding: 0.75rem 1.5rem;\n    font-size: 1.75rem;\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n  &-icon {\n    font-size: 28px;\n  }\n  &-icon--left {\n    margin-right: 0.5rem;\n  }\n  &-icon--right {\n    margin-left: 0.5rem;\n  }\n  &--loading {\n    opacity: 0.85;\n    pointer-events: none;\n    .fx-button-icon {\n      animation: spin 1s infinite linear;\n\n      @keyframes spin {\n        from {\n          transform: rotate(0deg);\n        }\n        to {\n          transform: rotate(360deg);\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./fx-ui-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  [attr.aria-label]=\"label()\"\n  [attr.aria-disabled]=\"isDisabled()\"\n  [attr.aria-pressed]=\"state() === 'active'\"\n  [attr.aria-describedby]=\"label() + '-description'\"\n  class=\"fx-button\"\n  (click)=\"handleButtonClick()\"\n  [ngClass]=\"classModifiers\"\n  [disabled]=\"isDisabled()\"\n>\n  <ng-container *ngIf=\"iconPosition() === 'left'\">\n    <span class=\"material-symbols-outlined fx-button-icon fx-button-icon--left\">\n      {{ icon() }}\n    </span>\n  </ng-container>\n  <span> {{ label() }}</span>\n  <ng-container *ngIf=\"iconPosition() === 'right'\">\n    <span\n      class=\"material-symbols-outlined fx-button-icon fx-button-icon--right\"\n    >\n      {{ icon() }}\n    </span>\n  </ng-container>\n  @if (state() === \"loading\") {\n    <span\n      class=\"material-symbols-outlined fx-button-icon fx-button-icon--right\"\n    >\n      progress_activity\n    </span>\n  }\n</button>\n"
        },
        {
            "name": "FxUiCardComponent",
            "id": "component-FxUiCardComponent-0bdb78968be37fd29a6b720770e3395872cd25b0133c997394a72186cb2da1871262d726f5255e0bda71cb6dd78fd07f313dfae7baba56c1baf70c48a6bea295",
            "file": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "cardDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                },
                {
                    "name": "cardFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                },
                {
                    "name": "cardImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "cardImgAltText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                },
                {
                    "name": "cardTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardDescription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                },
                {
                    "name": "cardFooter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                },
                {
                    "name": "cardImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "cardImgAltText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                },
                {
                    "name": "cardTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FxUiButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, InputSignal, input, type OnInit } from '@angular/core';\nimport { FxUiButtonComponent } from '../../atoms/fx-ui-button/fx-ui-button.component';\ninterface CardFooter {\n  footerRichText?: string;\n  footerButton?: string;\n}\n@Component({\n  selector: 'app-fx-ui-card',\n  standalone: true,\n  imports: [CommonModule, FxUiButtonComponent],\n  templateUrl: './fx-ui-card.component.html',\n  styleUrl: './fx-ui-card.component.scss',\n})\nexport class FxUiCardComponent implements OnInit {\n  cardTitle = input.required<string>();\n  cardDescription = input.required<string>();\n  cardImage = input<string>();\n  cardImgAltText = input<string>();\n  cardFooter = input<CardFooter>();\n\n  ngOnInit(): void {\n    return;\n  }\n}\n",
            "styleUrl": "./fx-ui-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"fx-ui-card\">\n  <div class=\"fx-ui-card-image\">\n    <img [src]=\"cardImage()\" [alt]=\"cardImgAltText()\" />\n  </div>\n  <div class=\"fx-ui-card-body\">\n    <h2>{{ cardTitle() }}</h2>\n    <div [innerHtml]=\"cardDescription()\"></div>\n  </div>\n  <div class=\"fx-ui-card-footer\">\n    @if (cardFooter()?.footerRichText) {\n      <div\n        class=\"fx-ui-card-footer-text\"\n        [innerHtml]=\"cardFooter()?.footerRichText\"\n      ></div>\n    }\n    @if (cardFooter()?.footerButton) {\n      <app-fx-ui-button\n        [color]=\"'primary'\"\n        [label]=\"'Find out more'\"\n        [size]=\"'small'\"\n      ></app-fx-ui-button>\n    }\n  </div>\n</div>\n"
        },
        {
            "name": "FxUiInputCheckboxComponent",
            "id": "component-FxUiInputCheckboxComponent-34372a0045ec14e099fcfc4189a4f76fa23e6ed2a75df6cf6e5cd36c80b374eb5251264428484e3717299932fab0ebeb0db50cbab38c0b31b7caae8602034ed2",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-checkbox/fx-ui-input-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-checkbox',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-checkbox.component.html',\n  styleUrl: './fx-ui-input-checkbox.component.scss',\n})\nexport class FxUiInputCheckboxComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-checkbox works!</p>,\n"
        },
        {
            "name": "FxUiInputGroupComponent",
            "id": "component-FxUiInputGroupComponent-8d60148de79d05544e289cc74b2d6c5474a207cb9e3e12a866675f4e0f1c5755c36c305b64ed5ca8ebfb43048d80c4194a454bad9f6915e16ce0a3b6ace2dd72",
            "file": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-input-group/fx-ui-input-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getComputedLabelProps",
                    "defaultValue": "computed(() => {\n    let labelFor = `text_${v4()}`;\n\n    if (this.inputType() === 'radio') {\n      labelFor = `radio_${v4()}`;\n    }\n\n    if (this.inputType() === 'checkbox') {\n      labelFor = `checkbox_${v4()}`;\n    }\n\n    return labelFor;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "inputGroupId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "inputId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "inputLabel",
                    "defaultValue": "input<string>('Input Label')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "inputType",
                    "defaultValue": "input<'text' | 'radio' | 'checkbox'>('text')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, type OnInit } from '@angular/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  selector: 'app-fx-ui-input-group',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-input-group.component.html',\n  styleUrl: './fx-ui-input-group.component.scss',\n})\nexport class FxUiInputGroupComponent implements OnInit {\n  inputType = input<'text' | 'radio' | 'checkbox'>('text');\n  inputLabel = input<string>('Input Label');\n  inputId = v4();\n  inputGroupId = v4();\n\n  getComputedLabelProps = computed(() => {\n    let labelFor = `text_${v4()}`;\n\n    if (this.inputType() === 'radio') {\n      labelFor = `radio_${v4()}`;\n    }\n\n    if (this.inputType() === 'checkbox') {\n      labelFor = `checkbox_${v4()}`;\n    }\n\n    return labelFor;\n  });\n\n  ngOnInit(): void {}\n}\n",
            "styleUrl": "./fx-ui-input-group.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"fx-ui-input-group\">\n  <label [for]=\"getComputedLabelProps()\" class=\"fx-ui-input-label\">\n    {{ inputLabel() }}\n  </label>\n  @if (inputType() === \"text\") {\n    <input\n      type=\"text\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-text\"\n    />\n  }\n  @if (inputType() === \"radio\") {\n    <input\n      type=\"radio\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-radio\"\n    />\n  }\n  @if (inputType() === \"checkbox\") {\n    <input\n      type=\"checkbox\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-checkbox\"\n    />\n  }\n</form>\n"
        },
        {
            "name": "FxUiInputRadioComponent",
            "id": "component-FxUiInputRadioComponent-05e31b946a8091065dc1b4460d92792be848d3f3fdeabf22387ddeccac8e5e139d5902e425d0dc499982c2dfe6f02d73053ab653662cdb1b4b14307a4784d690",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-radio/fx-ui-input-radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-radio',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-radio.component.html',\n  styleUrl: './fx-ui-input-radio.component.scss',\n})\nexport class FxUiInputRadioComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-radio.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-radio works!</p>,\n"
        },
        {
            "name": "FxUiInputTextComponent",
            "id": "component-FxUiInputTextComponent-911774afea1ce9b9414746c3b3763c7805c36ee25fefeedb4ec7f9416a6e9d92ac5af998fd1e731ee82ec550299dcd6be670f3ab4f63892db2a7d58f60621d75",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-text/fx-ui-input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-text',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-text.component.html',\n  styleUrl: './fx-ui-input-text.component.scss',\n})\nexport class FxUiInputTextComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-text.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-text works!</p>,\n"
        },
        {
            "name": "FxUiRichTextComponent",
            "id": "component-FxUiRichTextComponent-64807bb5babc0665c8d9dfc4170c9d04d341b6093e46bf722b096a7b7fa5cb2e2bc106a7af6ced0e6960f59dc679096ef789993acf1e2cb447ca48929d6d43d8",
            "file": "src/app/ui-lib/atomic/atoms/fx-ui-rich-text/fx-ui-rich-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-rich-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-rich-text.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "richText",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "richtextSanitized",
                    "defaultValue": "computed(() =>\n    this.sanitize.bypassSecurityTrustHtml(this.richText()),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "sanitize",
                    "defaultValue": "inject(DomSanitizer)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, inject, input, type OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-fx-ui-rich-text',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-rich-text.component.html',\n  styleUrl: './fx-ui-rich-text.component.scss',\n})\nexport class FxUiRichTextComponent {\n  richText = input<string>('');\n  sanitize = inject(DomSanitizer);\n  richtextSanitized = computed(() =>\n    this.sanitize.bypassSecurityTrustHtml(this.richText()),\n  );\n}\n",
            "styleUrl": "./fx-ui-rich-text.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"fx-rich-text\" *ngIf=\"richText()\">\n  <div [innerHTML]=\"richtextSanitized()\" class=\"fx-rich-text-content\"></div>\n</section>\n"
        },
        {
            "name": "FxUiStandardFormComponent",
            "id": "component-FxUiStandardFormComponent-516a63974107ab1c4dd34c9328e15d389c52609468625e8ae1ceda8a3819dc49576e457902dbe3ccc715290109f7fa3510435d25ee2ac465c70f8b8e1325f644",
            "file": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-standard-form/fx-ui-standard-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-standard-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-standard-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-standard-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-standard-form.component.html',\n  styleUrl: './fx-ui-standard-form.component.scss',\n})\nexport class FxUiStandardFormComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-standard-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-standard-form works!</p>,\n"
        },
        {
            "name": "FxUiToggleSwitchComponent",
            "id": "component-FxUiToggleSwitchComponent-27a6317836dd07b325e0399fdf49edf01e0e0799a3236565dd41a06a7ae630962d640ff616ee7e306968fcb985933797ace4d7b9272465bf75a93efe684dc7c6",
            "file": "src/app/ui-lib/atomic/molecules/fx-ui-toggle-switch/fx-ui-toggle-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-toggle-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-toggle-switch.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isInputFocused",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "toggleInputId",
                    "defaultValue": "input<string>('toggleInputId')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "togglePosition",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "toggleSupportText",
                    "defaultValue": "input<string>('Toggle')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "toggleTextPosition",
                    "defaultValue": "input<'left' | 'right'>('right')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInputFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSwitch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, input, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-toggle-switch',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-toggle-switch.component.html',\n  styleUrl: './fx-ui-toggle-switch.component.scss',\n})\nexport class FxUiToggleSwitchComponent {\n  toggleInputId = input<string>('toggleInputId');\n  toggleSupportText = input<string>('Toggle');\n  toggleTextPosition = input<'left' | 'right'>('right');\n  togglePosition = signal<boolean>(false);\n  isInputFocused = signal<boolean>(false);\n\n  toggleSwitch(): void {\n    this.togglePosition.set(!this.togglePosition());\n  }\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.toggleSwitch();\n    }\n  }\n  onInputFocus(): void {\n    this.isInputFocused.set(true);\n  }\n\n  onInputBlur(): void {\n    this.isInputFocused.set(false);\n  }\n}\n",
            "styleUrl": "./fx-ui-toggle-switch.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [ngClass]=\"{ 'fx-toggle': true, 'fx-toggle-focused': isInputFocused() }\">\n  <span\n    *ngIf=\"toggleTextPosition() === 'left'\"\n    class=\"fx-toggle-text fx-toggle-text--left\"\n  >\n    {{ toggleSupportText() }}\n  </span>\n  <label class=\"fx-toggle-switch\">\n    <input\n      [name]=\"'fx_toggle_switch_' + toggleInputId()\"\n      [id]=\"toggleInputId()\"\n      type=\"checkbox\"\n      [checked]=\"togglePosition()\"\n      (focus)=\"onInputFocus()\"\n      (change)=\"toggleSwitch()\"\n      (blur)=\"onInputBlur()\"\n      (keydown)=\"handleKeyDown($event)\"\n      [attr.aria-checked]=\"togglePosition()\"\n      role=\"switch\"\n      tabindex=\"0\"\n    />\n    <span class=\"fx-toggle-slider\"></span>\n  </label>\n  <span\n    *ngIf=\"toggleTextPosition() === 'right'\"\n    class=\"fx-toggle-text fx-toggle-text--right\"\n  >\n    {{ toggleSupportText() }}\n  </span>\n</div>\n"
        },
        {
            "name": "UiLibComponent",
            "id": "component-UiLibComponent-32895402c290c44ee74e77d0872a86be1e18b965ac697d4bbfb4a4e7c0c464744e7e35998d644c05664af3773b37c3936e88b304f21d9ebdbde13c7730af0987",
            "file": "src/app/ui-lib/ui-lib.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fx-ui-lib",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ui-lib.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'fx-ui-lib',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './ui-lib.component.html',\n  styleUrl: './ui-lib.component.scss',\n})\nexport class UiLibComponent { }\n",
            "styleUrl": "./ui-lib.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>ui-lib works!</p>,\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideStore()]\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FxUiButtonColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FxUiButtonIconPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"icon\" | \"left\" | \"right\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FxUiButtonShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"square\" | \"rounded\" | \"circle\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FxUiButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FxUiButtonState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"active\" | \"disabled\" | \"loading\" | \"hover\" | \"focus\" | \"error\" | \"success\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FxUiButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"fill\" | \"outline\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideStore()]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts": [
                {
                    "name": "FxUiButtonColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FxUiButtonIconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"icon\" | \"left\" | \"right\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FxUiButtonShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"square\" | \"rounded\" | \"circle\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FxUiButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FxUiButtonState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"active\" | \"disabled\" | \"loading\" | \"hover\" | \"focus\" | \"error\" | \"success\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "FxUiButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"fill\" | \"outline\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-checkbox/fx-ui-input-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-radio/fx-ui-input-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-text/fx-ui-input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/fx-ui-rich-text/fx-ui-rich-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiRichTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-input-group/fx-ui-input-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-standard-form/fx-ui-standard-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiStandardFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/fx-ui-toggle-switch/fx-ui-toggle-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiToggleSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardFooter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/ui-lib.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiLibComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}