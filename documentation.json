{
    "pipes": [],
    "interfaces": [
        {
            "name": "CardFooter",
            "id": "interface-CardFooter-d02445554f016b441ecacd26126ec04a",
            "file": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, InputSignal, input, type OnInit } from '@angular/core';\nimport { FxUiButtonComponent } from '../../atoms/fx-ui-button/fx-ui-button.component';\ninterface CardFooter {\n  footerRichText?: string;\n  footerButton?: string;\n}\n@Component({\n  selector: 'app-fx-ui-card',\n  standalone: true,\n  imports: [CommonModule, FxUiButtonComponent],\n  templateUrl: './fx-ui-card.component.html',\n  styleUrl: './fx-ui-card.component.scss',\n})\nexport class FxUiCardComponent implements OnInit {\n  cardTitle = input.required<string>();\n  cardDescription = input.required<string>();\n  cardImage = input<string>();\n  cardImgAltText = input<string>();\n  cardFooter = input<CardFooter>();\n\n  ngOnInit(): void {\n    return;\n  }\n}\n",
            "properties": [
                {
                    "name": "footerButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "footerRichText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-742723d43088ff4c69fef2f011263abd",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ng-experiments'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'ng-experiments';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<main class=\"ng-experiments\"></main>\n\n<router-outlet />\n"
        },
        {
            "name": "FxUiButtonComponent",
            "id": "component-FxUiButtonComponent-bbfdcef0fa2ef5142f143f141b57e374",
            "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-button",
            "styleUrls": [
                "./fx-ui-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./fx-ui-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonClickEvent",
                    "defaultValue": "output<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "classModifiers",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "color",
                    "defaultValue": "input<FxUiButtonColor>('secondary')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "input<FxUiButtonIconPosition>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "computed(\n    () => this.state() === 'disabled' || this.state() === 'loading',\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        132
                    ]
                },
                {
                    "name": "label",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "shape",
                    "defaultValue": "input<FxUiButtonShape>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "size",
                    "defaultValue": "input<FxUiButtonSize>('medium')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "state",
                    "defaultValue": "input<FxUiButtonState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "type",
                    "defaultValue": "input<FxUiButtonType>('fill')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "generateButtonClass",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, OnInit, input, computed, output } from '@angular/core';\nimport {\n  FxUiButtonType,\n  FxUiButtonSize,\n  FxUiButtonColor,\n  FxUiButtonShape,\n  FxUiButtonIconPosition,\n  FxUiButtonState,\n} from './fx-ui-button.component.type';\n\n@Component({\n  selector: 'app-fx-ui-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-button.component.html',\n  styleUrls: ['./fx-ui-button.component.scss'],\n})\nexport class FxUiButtonComponent implements OnInit {\n  type = input<FxUiButtonType>('fill');\n  size = input<FxUiButtonSize>('medium');\n  color = input<FxUiButtonColor>('secondary');\n  shape = input<FxUiButtonShape>();\n  iconPosition = input<FxUiButtonIconPosition>();\n  state = input<FxUiButtonState>();\n  label = input.required<string>();\n  buttonClickEvent = output<void>();\n  classModifiers: { [key: string]: boolean } = {};\n  icon = input<string>();\n\n  ngOnInit(): void {\n    this.classModifiers = this.generateButtonClass();\n  }\n\n  ngOnChanges(): void {\n    this.classModifiers = this.generateButtonClass();\n  }\n\n  generateButtonClass(): { [key: string]: boolean } {\n    return {\n      [`fx-button--${this.size()}`]: !!this.size(),\n      [`fx-button--${this.color()}`]: !!this.color(),\n      [`fx-button--${this.shape()}`]: !!this.shape(),\n      [`fx-button--${this.iconPosition()}`]: !!this.iconPosition(),\n      [`fx-button--${this.state()}`]: !!this.state(),\n      [`fx-button--${this.type()}`]: !!this.type(),\n    };\n  }\n\n  handleButtonClick(): void {\n    this.buttonClickEvent.emit();\n  }\n\n  // Computed properties\n  readonly isDisabled = computed(\n    () => this.state() === 'disabled' || this.state() === 'loading',\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Basic button styles */\n\n@use \"../../../../assets/scss/variables\" as *;\n\n$selector: \"fx-button\";\n\n.fx-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 4px;\n\n  &--fill {\n    color: $grey-100;\n    &.#{$selector}--primary {\n      background-color: $primary;\n      &:hover {\n        background-color: light($primary, 10%);\n      }\n    }\n    &.#{$selector}--secondary {\n      background-color: $secondary;\n\n      &:hover {\n        background-color: light($secondary, 10%);\n      }\n    }\n    &.#{$selector}--tertiary {\n      background-color: $tertiary;\n      color: $grey-900;\n      &:hover {\n        background-color: light($tertiary, 10%);\n      }\n    }\n\n    &.#{$selector}--success {\n      background-color: $success;\n      &:hover {\n        background-color: light($success, 10%);\n      }\n    }\n\n    &.#{$selector}--warning {\n      background-color: $warning;\n      color: $grey-800;\n      &:hover {\n        background-color: light($warning, 10%);\n      }\n    }\n\n    &.#{$selector}--danger {\n      background-color: $error;\n      color: $grey-100;\n      &:hover {\n        background-color: light($error, 10%);\n      }\n    }\n  }\n\n  &--outline {\n    background-color: transparent;\n\n    &.#{$selector}--primary {\n      color: $primary;\n      border: 1px solid $primary;\n      &:hover {\n        background-color: $primary;\n      }\n    }\n    &.#{$selector}--secondary {\n      color: $secondary;\n      border: 1px solid $secondary;\n      &:hover {\n        background-color: $secondary;\n      }\n    }\n    &.#{$selector}--tertiary {\n      color: $tertiary;\n      border: 1px solid $tertiary;\n      &:hover {\n        background-color: $tertiary;\n      }\n    }\n\n    &.#{$selector}--success {\n      color: $success;\n      border: 1px solid $success;\n      &:hover {\n        background-color: $success;\n      }\n    }\n\n    &.#{$selector}--warning {\n      color: $warning;\n      border: 1px solid $warning;\n      &:hover {\n        background-color: $warning;\n      }\n    }\n\n    &.#{$selector}--danger {\n      color: $error;\n      border: 1px solid $error;\n      &:hover {\n        background-color: $error;\n      }\n    }\n    &:hover {\n      color: $grey-100 !important;\n    }\n  }\n  &--small {\n    padding: 1rem 1.25rem;\n    font-size: 1rem;\n  }\n  &--medium {\n    padding: 1.25rem 2.5rem;\n    font-size: 1.5rem;\n  }\n  &--large {\n    padding: 0.75rem 1.5rem;\n    font-size: 1.75rem;\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n  &-icon {\n    font-size: 28px;\n  }\n  &-icon--left {\n    margin-right: 0.5rem;\n  }\n  &-icon--right {\n    margin-left: 0.5rem;\n  }\n  &--loading {\n    opacity: 0.85;\n    pointer-events: none;\n    .fx-button-icon {\n      animation: spin 1s infinite linear;\n\n      @keyframes spin {\n        from {\n          transform: rotate(0deg);\n        }\n        to {\n          transform: rotate(360deg);\n        }\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./fx-ui-button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  [attr.aria-label]=\"label()\"\n  [attr.aria-disabled]=\"isDisabled()\"\n  [attr.aria-pressed]=\"state() === 'active'\"\n  [attr.aria-describedby]=\"label() + '-description'\"\n  class=\"fx-button\"\n  (click)=\"handleButtonClick()\"\n  [ngClass]=\"classModifiers\"\n  [disabled]=\"isDisabled()\"\n>\n  <ng-container *ngIf=\"iconPosition() === 'left'\">\n    <span class=\"material-symbols-outlined fx-button-icon fx-button-icon--left\">\n      {{ icon() }}\n    </span>\n  </ng-container>\n  <span> {{ label() }}</span>\n  <ng-container *ngIf=\"iconPosition() === 'right'\">\n    <span\n      class=\"material-symbols-outlined fx-button-icon fx-button-icon--right\"\n    >\n      {{ icon() }}\n    </span>\n  </ng-container>\n  @if (state() === \"loading\") {\n    <span\n      class=\"material-symbols-outlined fx-button-icon fx-button-icon--right\"\n    >\n      progress_activity\n    </span>\n  }\n</button>\n"
        },
        {
            "name": "FxUiCardComponent",
            "id": "component-FxUiCardComponent-d02445554f016b441ecacd26126ec04a",
            "file": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardDescription",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "cardFooter",
                    "defaultValue": "input<CardFooter>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "cardImage",
                    "defaultValue": "input<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "cardImgAltText",
                    "defaultValue": "input<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "cardTitle",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, InputSignal, input, type OnInit } from '@angular/core';\nimport { FxUiButtonComponent } from '../../atoms/fx-ui-button/fx-ui-button.component';\ninterface CardFooter {\n  footerRichText?: string;\n  footerButton?: string;\n}\n@Component({\n  selector: 'app-fx-ui-card',\n  standalone: true,\n  imports: [CommonModule, FxUiButtonComponent],\n  templateUrl: './fx-ui-card.component.html',\n  styleUrl: './fx-ui-card.component.scss',\n})\nexport class FxUiCardComponent implements OnInit {\n  cardTitle = input.required<string>();\n  cardDescription = input.required<string>();\n  cardImage = input<string>();\n  cardImgAltText = input<string>();\n  cardFooter = input<CardFooter>();\n\n  ngOnInit(): void {\n    return;\n  }\n}\n",
            "styleUrl": "./fx-ui-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"fx-ui-card\">\n  <div class=\"fx-ui-card-image\">\n    <img [src]=\"cardImage()\" [alt]=\"cardImgAltText()\" />\n  </div>\n  <div class=\"fx-ui-card-body\">\n    <h2>{{ cardTitle() }}</h2>\n    <div [innerHtml]=\"cardDescription()\"></div>\n  </div>\n  <div class=\"fx-ui-card-footer\">\n    @if (cardFooter()?.footerRichText) {\n      <div\n        class=\"fx-ui-card-footer-text\"\n        [innerHtml]=\"cardFooter()?.footerRichText\"\n      ></div>\n    }\n    @if (cardFooter()?.footerButton) {\n      <app-fx-ui-button\n        [color]=\"'primary'\"\n        [label]=\"'Find out more'\"\n        [size]=\"'small'\"\n      ></app-fx-ui-button>\n    }\n  </div>\n</div>\n"
        },
        {
            "name": "FxUiInputCheckboxComponent",
            "id": "component-FxUiInputCheckboxComponent-6125acd468b8938b0b6e85318f56487f",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-checkbox/fx-ui-input-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-checkbox',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-checkbox.component.html',\n  styleUrl: './fx-ui-input-checkbox.component.scss',\n})\nexport class FxUiInputCheckboxComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-checkbox works!</p>,\n"
        },
        {
            "name": "FxUiInputGroupComponent",
            "id": "component-FxUiInputGroupComponent-425eb3b345898746c6c125bcf814750b",
            "file": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-input-group/fx-ui-input-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "getComputedLabelProps",
                    "defaultValue": "computed(() => {\n    let labelFor = `text_${v4()}`;\n\n    if (this.inputType() === 'radio') {\n      labelFor = `radio_${v4()}`;\n    }\n\n    if (this.inputType() === 'checkbox') {\n      labelFor = `checkbox_${v4()}`;\n    }\n\n    return labelFor;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "inputGroupId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "inputId",
                    "defaultValue": "v4()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "inputLabel",
                    "defaultValue": "input<string>('Input Label')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "inputType",
                    "defaultValue": "input<'text' | 'radio' | 'checkbox'>('text')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, input, type OnInit } from '@angular/core';\nimport { v4 } from 'uuid';\n\n@Component({\n  selector: 'app-fx-ui-input-group',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-input-group.component.html',\n  styleUrl: './fx-ui-input-group.component.scss',\n})\nexport class FxUiInputGroupComponent implements OnInit {\n  inputType = input<'text' | 'radio' | 'checkbox'>('text');\n  inputLabel = input<string>('Input Label');\n  inputId = v4();\n  inputGroupId = v4();\n\n  getComputedLabelProps = computed(() => {\n    let labelFor = `text_${v4()}`;\n\n    if (this.inputType() === 'radio') {\n      labelFor = `radio_${v4()}`;\n    }\n\n    if (this.inputType() === 'checkbox') {\n      labelFor = `checkbox_${v4()}`;\n    }\n\n    return labelFor;\n  });\n\n  ngOnInit(): void {}\n}\n",
            "styleUrl": "./fx-ui-input-group.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"fx-ui-input-group\">\n  <label [for]=\"getComputedLabelProps()\" class=\"fx-ui-input-label\">\n    {{ inputLabel() }}\n  </label>\n  @if (inputType() === \"text\") {\n    <input\n      type=\"text\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-text\"\n    />\n  }\n  @if (inputType() === \"radio\") {\n    <input\n      type=\"radio\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-radio\"\n    />\n  }\n  @if (inputType() === \"checkbox\") {\n    <input\n      type=\"checkbox\"\n      [id]=\"getComputedLabelProps()\"\n      [name]=\"getComputedLabelProps()\"\n      class=\"fx-ui-input-checkbox\"\n    />\n  }\n</form>\n"
        },
        {
            "name": "FxUiInputRadioComponent",
            "id": "component-FxUiInputRadioComponent-2d35e0b929d699e9483f64de5ad0521a",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-radio/fx-ui-input-radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-radio',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-radio.component.html',\n  styleUrl: './fx-ui-input-radio.component.scss',\n})\nexport class FxUiInputRadioComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-radio.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-radio works!</p>,\n"
        },
        {
            "name": "FxUiInputTextComponent",
            "id": "component-FxUiInputTextComponent-c19eb59480ea8ac1303e78ca0f898ad1",
            "file": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-text/fx-ui-input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-input-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-input-text',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-input-text.component.html',\n  styleUrl: './fx-ui-input-text.component.scss',\n})\nexport class FxUiInputTextComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-input-text.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-input-text works!</p>,\n"
        },
        {
            "name": "FxUiRichTextComponent",
            "id": "component-FxUiRichTextComponent-fa9fb596eb57a9e982ad516b48cf61dc",
            "file": "src/app/ui-lib/atomic/atoms/fx-ui-rich-text/fx-ui-rich-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-rich-text",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-rich-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "richText",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "richtextSanitized",
                    "defaultValue": "computed(() =>\n    this.sanitize.bypassSecurityTrustHtml(this.richText()),\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "sanitize",
                    "defaultValue": "inject(DomSanitizer)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, computed, inject, input, type OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-fx-ui-rich-text',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-rich-text.component.html',\n  styleUrl: './fx-ui-rich-text.component.scss',\n})\nexport class FxUiRichTextComponent {\n  richText = input<string>('');\n  sanitize = inject(DomSanitizer);\n  richtextSanitized = computed(() =>\n    this.sanitize.bypassSecurityTrustHtml(this.richText()),\n  );\n}\n",
            "styleUrl": "./fx-ui-rich-text.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<section class=\"fx-rich-text\" *ngIf=\"richText()\">\n  <div [innerHTML]=\"richtextSanitized()\" class=\"fx-rich-text-content\"></div>\n</section>\n"
        },
        {
            "name": "FxUiStandardFormComponent",
            "id": "component-FxUiStandardFormComponent-be331a0d7758a0e1d175223220a89b7f",
            "file": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-standard-form/fx-ui-standard-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-standard-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-standard-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, type OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-standard-form',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './fx-ui-standard-form.component.html',\n  styleUrl: './fx-ui-standard-form.component.scss',\n})\nexport class FxUiStandardFormComponent implements OnInit {\n\n  ngOnInit(): void { }\n\n}\n",
            "styleUrl": "./fx-ui-standard-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>fx-ui-standard-form works!</p>,\n"
        },
        {
            "name": "FxUiToggleSwitchComponent",
            "id": "component-FxUiToggleSwitchComponent-2e30bd933b31740a0b8048f489258077",
            "file": "src/app/ui-lib/atomic/molecules/fx-ui-toggle-switch/fx-ui-toggle-switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-fx-ui-toggle-switch",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fx-ui-toggle-switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isInputFocused",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "toggleInputId",
                    "defaultValue": "input<string>('toggleInputId')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "togglePosition",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "toggleSupportText",
                    "defaultValue": "input<string>('Toggle')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "toggleTextPosition",
                    "defaultValue": "input<'left' | 'right'>('right')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onInputBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInputFocus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSwitch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, input, signal } from '@angular/core';\n\n@Component({\n  selector: 'app-fx-ui-toggle-switch',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fx-ui-toggle-switch.component.html',\n  styleUrl: './fx-ui-toggle-switch.component.scss',\n})\nexport class FxUiToggleSwitchComponent {\n  toggleInputId = input<string>('toggleInputId');\n  toggleSupportText = input<string>('Toggle');\n  toggleTextPosition = input<'left' | 'right'>('right');\n  togglePosition = signal<boolean>(false);\n  isInputFocused = signal<boolean>(false);\n\n  toggleSwitch(): void {\n    this.togglePosition.set(!this.togglePosition());\n  }\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.toggleSwitch();\n    }\n  }\n  onInputFocus(): void {\n    this.isInputFocused.set(true);\n  }\n\n  onInputBlur(): void {\n    this.isInputFocused.set(false);\n  }\n}\n",
            "styleUrl": "./fx-ui-toggle-switch.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div [ngClass]=\"{ 'fx-toggle': true, 'fx-toggle-focused': isInputFocused() }\">\n  <span\n    *ngIf=\"toggleTextPosition() === 'left'\"\n    class=\"fx-toggle-text fx-toggle-text--left\"\n  >\n    {{ toggleSupportText() }}\n  </span>\n  <label class=\"fx-toggle-switch\">\n    <input\n      [name]=\"'fx_toggle_switch_' + toggleInputId()\"\n      [id]=\"toggleInputId()\"\n      type=\"checkbox\"\n      [checked]=\"togglePosition()\"\n      (focus)=\"onInputFocus()\"\n      (change)=\"toggleSwitch()\"\n      (blur)=\"onInputBlur()\"\n      (keydown)=\"handleKeyDown($event)\"\n      [attr.aria-checked]=\"togglePosition()\"\n      role=\"switch\"\n      tabindex=\"0\"\n    />\n    <span class=\"fx-toggle-slider\"></span>\n  </label>\n  <span\n    *ngIf=\"toggleTextPosition() === 'right'\"\n    class=\"fx-toggle-text fx-toggle-text--right\"\n  >\n    {{ toggleSupportText() }}\n  </span>\n</div>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-bb167a89072d1d84a33b9f0f6981c0c2",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[] | undefined",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { MenubarModule } from 'primeng/menubar';\nimport { BadgeModule } from 'primeng/badge';\nimport { AvatarModule } from 'primeng/avatar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CommonModule } from '@angular/common';\nimport { RippleModule } from 'primeng/ripple';\nimport { Router } from '@angular/router';\nimport { CardModule } from 'primeng/card';\nimport { ButtonModule } from 'primeng/button';\nimport { PanelModule } from 'primeng/panel';\nimport { AnimateModule } from 'primeng/animate';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  standalone: true,\n  imports: [\n    AnimateModule,\n    CommonModule,\n    MenubarModule,\n    BadgeModule,\n    AvatarModule,\n    InputTextModule,\n    RippleModule,\n    CardModule,\n    ButtonModule,\n    PanelModule,\n  ],\n  animations: [],\n})\nexport class HomeComponent implements OnInit {\n  items: MenuItem[] | undefined;\n  private router = inject(Router);\n\n  ngOnInit() {\n    this.items = [\n      {\n        label: 'Router',\n        icon: 'pi pi-palette',\n        items: [\n          {\n            label: 'Installation',\n            route: '/installation',\n          },\n          {\n            label: 'Configuration',\n            route: '/configuration',\n          },\n        ],\n      },\n      {\n        label: 'Programmatic',\n        icon: 'pi pi-link',\n        command: () => {\n          this.router.navigate(['/installation']);\n        },\n      },\n      {\n        label: 'External',\n        icon: 'pi pi-home',\n        items: [\n          {\n            label: 'Angular',\n            url: 'https://angular.io/',\n          },\n          {\n            label: 'Vite.js',\n            url: 'https://vitejs.dev/',\n          },\n        ],\n      },\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-menubar [model]=\"items\">\n  <ng-template pTemplate=\"item\" let-item>\n    <ng-container *ngIf=\"item.route; else urlRef\">\n      <a [routerLink]=\"item.route\" class=\"p-menuitem-link\">\n        <span [class]=\"item.icon\"></span>\n        <span class=\"ml-2\">{{ item.label }}</span>\n      </a>\n    </ng-container>\n    <ng-template #urlRef>\n      <a\n        *ngIf=\"item.url; else noLink\"\n        [href]=\"item.url\"\n        class=\"p-menuitem-link\"\n      >\n        <span [class]=\"item.icon\"></span>\n        <span class=\"ml-2\">{{ item.label }}</span>\n      </a>\n    </ng-template>\n    <ng-template #noLink>\n      <div class=\"p-menuitem-link\">\n        <span [class]=\"item.icon\"></span>\n        <span class=\"ml-2\">{{ item.label }}</span>\n        <span class=\"pi pi-fw pi-angle-down ml-2\"></span>\n      </div>\n    </ng-template>\n  </ng-template>\n</p-menubar>\n<p-card\n  header=\"Advanced Card\"\n  subheader=\"Card Subheader\"\n  [style]=\"{ width: '360px' }\"\n>\n  <ng-template pTemplate=\"header\">\n    <img\n      alt=\"Card\"\n      src=\"https://primefaces.org/cdn/primeng/images/card-ng.jpg\"\n    />\n  </ng-template>\n  <p>Lorem ipsum dolor sit amet...</p>\n  <ng-template pTemplate=\"footer\">\n    <div class=\"flex gap-3 mt-1\">\n      <p-button\n        label=\"Cancel\"\n        severity=\"secondary\"\n        class=\"w-full\"\n        styleClass=\"w-full\"\n      />\n      <p-button label=\"Save\" class=\"w-full\" styleClass=\"w-full\" />\n    </div>\n  </ng-template>\n</p-card>\n<section>\n  <div class=\"card flex justify-content-center\">\n    <p-panel header=\"Header\">\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </p>\n    </p-panel>\n  </div>\n</section>\n"
        },
        {
            "name": "UiLibComponent",
            "id": "component-UiLibComponent-9fc7e30584b6b694d553942b0ed95a10",
            "file": "src/app/ui-lib/ui-lib.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "fx-ui-lib",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ui-lib.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'fx-ui-lib',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './ui-lib.component.html',\n  styleUrl: './ui-lib.component.scss',\n})\nexport class UiLibComponent { }\n",
            "styleUrl": "./ui-lib.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<p>ui-lib works!</p>,\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideStore(),\n    importProvidersFrom([BrowserAnimationsModule]),\n  ],\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FxUiButtonColor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            },
            {
                "name": "FxUiButtonIconPosition",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"icon\" | \"left\" | \"right\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            },
            {
                "name": "FxUiButtonShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"square\" | \"rounded\" | \"circle\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            },
            {
                "name": "FxUiButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            },
            {
                "name": "FxUiButtonState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"active\" | \"disabled\" | \"loading\" | \"hover\" | \"focus\" | \"error\" | \"success\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            },
            {
                "name": "FxUiButtonType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"fill\" | \"outline\"",
                "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideStore(),\n    importProvidersFrom([BrowserAnimationsModule]),\n  ],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts": [
                {
                    "name": "FxUiButtonColor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "FxUiButtonIconPosition",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"icon\" | \"left\" | \"right\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "FxUiButtonShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"square\" | \"rounded\" | \"circle\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "FxUiButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "FxUiButtonState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"active\" | \"disabled\" | \"loading\" | \"hover\" | \"focus\" | \"error\" | \"success\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                },
                {
                    "name": "FxUiButtonType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"fill\" | \"outline\"",
                    "file": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-checkbox/fx-ui-input-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-radio/fx-ui-input-radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/form-elements/fx-ui-input-text/fx-ui-input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/fx-ui-button/fx-ui-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/atoms/fx-ui-rich-text/fx-ui-rich-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiRichTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-input-group/fx-ui-input-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiInputGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/form-elements/fx-ui-standard-form/fx-ui-standard-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiStandardFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/molecules/fx-ui-toggle-switch/fx-ui-toggle-switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiToggleSwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FxUiCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/atomic/organisms/fx-ui-card/fx-ui-card.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardFooter",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/ui-lib/ui-lib.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UiLibComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}